<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ks49team01.branch.mapper.BranchReviewMapper">

	<resultMap type="BranchReview" id="reviewResultMap">
		<id column="review_num" 				property="reviewNum"/>
		<result column="member_id" 				property="memberId"/>
		<result column="branch_code" 			property="branchCode"/>
		<result column="payments_due_code" 		property="paymentsDueCode"/>
		<result column="stay_period_code" 		property="stayPeriodCode"/>
		<result column="room_code" 				property="roomCode"/>
		<result column="review_context" 		property="reviewContext"/>
		<result column="review_date" 			property="reviewDate"/>
		<result column="review_views" 			property="reviewViews"/>
		<result column="review_file_code" 		property="reviewFileCode"/>
		<result column="file_attribute" 		property="fileAttribute"/>
		
	</resultMap>
	
	<!-- 리뷰목록 조회 -->
 	<select id="getReviewList" resultMap="reviewResultMap">
		SELECT
			r.review_num,
			r.member_id,
			r.review_context,
			rf.file_attribute,
			r.review_date,
			r.review_views
		FROM
			review AS r
			LEFT JOIN
			review_file AS rf
			ON
			r.review_file_code = rf.review_file_code;
 	</select>
 
 	<!-- 리뷰내용에 따른 키워드 검색(모달) -->
 	<select id="getSearchReviewContext" parameterType="String" resultMap="reviewResultMap">
		SELECT
			r.review_num,
			r.review_context,
			r.member_id
		FROM
			review AS r
		<where>
			<if test="searchReviewContext != null and searchReviewContext != ''">
				r.review_context LIKE CONCAT('%', #{searchReviewContext}, '%')
			</if>
		</where>				
 	</select> 	
 
 	<!-- 리뷰목록 최종검색 -->
   	<select id="getSearchByReview" resultMap="reviewResultMap" parameterType="list">
		SELECT
			r.review_num,
			r.member_id,
			r.review_context,
			rf.file_attribute,
			r.review_date,
			r.review_views
		FROM
			review AS r
			LEFT JOIN
			review_file AS rf
			ON
			r.review_file_code = rf.review_file_code
		<where>
			<foreach collection="paramList" item="item">
				<if test="item.searchKey != null and item.searchKey != ''">						
					AND ${item.searchKey} LIKE CONCAT('%', #{item.searchValue},'%')										
				</if>
			</foreach>
		</where>			
 	</select> 
 
 
 	

 	
 	
 	
 	
 	
 	<resultMap type="BranchReviewCategory" id="CategoryResultMap">
		<id column="category_code" 						property="categoryCode"/>
		<result column="member_id" 						property="memberId"/>
		<result column="review_category_kind" 			property="reviewCategoryKind"/>
		<result column="review_category_context" 		property="reviewCategoryContext"/>
		<result column="review_category_register_date" 	property="reviewCategoryRegisterDate"/>	
	</resultMap>
	
	<!-- 리뷰카테고리 등록 -->
	<insert id="addReviewCategory" parameterType="BranchReviewCategory">
		<selectKey keyProperty="categoryCode" resultType="String" order="BEFORE">
			/* category code 자동증가 */
			SELECT
				CASE
				WHEN COUNT(rc.category_code) = 0 THEN 'category_code_1' 
				ELSE
					CONCAT('category_code_',(MAX(CAST(SUBSTRING_INDEX(rc.category_code,'category_code_', -1) AS UNSIGNED))+1))
				END AS categoryCode
			FROM
				review_category AS rc
		</selectKey>
			/* 카테고리등록 */
			INSERT INTO review_category
			(category_code, member_id, review_category_kind, review_category_context, review_category_register_date)
			VALUES
			(#{categoryCode}, #{memberId}, #{reviewCategoryKind}, #{reviewCategoryContext}, CURDATE())
	</insert>	
	
	<!-- 특정코드로 리뷰 카테고리 조회 -->
	<select id="getReviewCategoryByCode" parameterType="String" resultMap="CategoryResultMap">
	
		/* 특정코드로 리뷰 카테고리 조회*/
		SELECT
			rc.category_code,
			rc.member_id,
			rc.review_category_kind,
			rc.review_category_context,
			rc.review_category_register_date
		FROM
			review_category AS rc
		WHERE	
			rc.category_code = #{categoryCode};
	</select>	
	
	
	<!-- 리뷰카테고리 목록 조회 -->
 	<select id="getReviewCategory" resultMap="CategoryResultMap">
		SELECT
			rc.category_code,
			rc.member_id,
			rc.review_category_kind,
			rc.review_category_context,
			rc.review_category_register_date
		FROM
			review_category AS rc;		
 	</select>
 	
 	<!-- 특정코드로 리뷰카테고리 수정 -->
 	<update id="modifyReviewCategory" parameterType="BranchReviewCategory">
		/* 특정코드로 리뷰카테고리 수정*/
		UPDATE review_category
		<set>
			<if test="reviewCategoryKind != null and reviewCategoryKind != ''">	
				review_category_kind=#{reviewCategoryKind},
			</if>
			<if test="reviewCategoryContext != null and reviewCategoryContext != ''">
				review_category_context=#{reviewCategoryContext},
			</if>
		</set>
			WHERE
				category_code=#{categoryCode};
	</update>	
		
 	<!-- 카테고리종류에 따른 검색  -->
 	<select id="getSearchCategory" resultMap="CategoryResultMap" parameterType="list"> 	
		SELECT
			rc.category_code,
			rc.member_id,
			rc.review_category_kind,
			rc.review_category_context,
			rc.review_category_register_date
		FROM
			review_category AS rc		
		<where>
			<foreach collection="paramList" item="item">
				<if test="item.searchKey != null and item.searchKey != ''">
					AND ${item.searchKey} LIKE CONCAT('%', #{item.searchValue} ,'%')		
				</if>
			</foreach>
		</where>	
	</select>
	
	
	
	
</mapper>