<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ks49team01.admin.mapper.AdminUserMapper">
	<resultMap type="AdminUser" id="usersResultMap">
		<id 	column="member_id" 		property="memberId" />
		<result column="member_pw" 		property="memberPw"/>
		<result column="member_name" 		property="memberName"/>
		<result column="member_email" 		property="memberEmail"/>
		<result column="member_birth" 		property="memberBirth"/>
		<result column="member_gender" 		property="memberGender"/>
		<result column="member_phone" 		property="memberPhone"/>
		<result column="member_addr" 		property="memberAddr"/>
		<result column="member_addr_detail" 		property="member_addr_detail"/>
		<result column="member_regdate" 		property="memberRegDate"/>
		<result column="roompay_mileage_rate_code" 		property="roompay_mileage_rate_code"/>
		
		<result column="final_mileage" 		property="final_mileage"/>
		<result column="accumulated_payment_amount" 		property="accumulated_payment_amount"/>
		<result column="memberState" 		property="memberState"/>
		<result column="mem_level_code" 		property="mem_level_code"/>
		<result column="membership_rating" 		property="membership_rating"/>
		
		   <association property="adminUserLevel" javaType="AdminUserLevel">
    <!-- id: 테이블의 PK컬럼 -->
    <id column="mem_level_code" property="mem_level_code"/>
    <!-- result: 테이블의 PK컬럼을 제외한 컬럼 -->
    <result column="member_id" property="member_id"/>
    <result column="membership_rating" property="membership_rating"/>
    <result column="System_registration_time" property="System_registration_time"/>
</association>

   <association property="roompayMileageRate" javaType="RoompayMileageRate">
    <!-- id: 테이블의 PK컬럼 -->
    <id column="roompay_mileage_rate_code" property="roompay_mileage_rate_code"/>
    <!-- result: 테이블의 PK컬럼을 제외한 컬럼 -->
    <result column="mileage_grade_name" property="mileage_grade_name"/>
</association>
	</resultMap>
	
<select id="memberMileageList" resultMap="usersResultMap">
    SELECT roompay_mileage_rate_code, mileage_grade_name
    FROM roompay_mileage_rate
</select>
<delete id="removeMemberById">
	DELETE FROM member WHERE member_id=#{memberId};
</delete>

	<update id="modifyMember" parameterType="AdminUser">
		/* 특정회원 수정 */
		UPDATE member
		<set>
			<if test="mem_level_code != null and mem_level_code != ''">
				mem_level_code=#{mem_level_code},
			</if>
			<if test="roompay_mileage_rate_code != null and roompay_mileage_rate_code != ''">
				roompay_mileage_rate_code=#{roompay_mileage_rate_code},
			</if>
			<if test="memberPw != null and memberPw != ''">
				member_pw=#{memberPw},
			</if>
			<if test="memberEmail != null and memberEmail != ''">
				member_email=#{memberEmail},
			</if>
			<if test="memberName != null and memberName != ''">
				member_name=#{memberName},
			</if>
			<if test="memberBirth != null">
			    member_birth=#{memberBirth},
			</if>

			<if test="memberGender != null and memberGender != ''">
				member_gender=#{memberGender},
			</if>
			<if test="memberPhone != null and memberPhone != ''">
				member_phone=#{memberPhone},
			</if>
			<if test="memberAddr != null and memberAddr != ''">
				member_addr=#{memberAddr},
			</if>
			<if test="member_addr_detail != null and member_addr_detail != ''">
				member_addr_detail=#{member_addr_detail},
			</if>
			<if test="memberRegDate != null and memberRegDate != ''">
				member_regdate=CURDATE()<!-- #{memberRegDate} -->,
			</if>
			<if test="final_mileage != null and final_mileage != ''">
				final_mileage= 0 <!-- #{final_mileage} -->,
			</if>
			<if test="accumulated_payment_amount != null and accumulated_payment_amount != ''">
				accumulated_payment_amount= 0<!-- #{accumulated_payment_amount} -->,
			</if>
			<if test="memberState != null and memberState != ''">
				memberState= '정상회원'<!-- #{memberState} -->,
			</if>
		</set>	
		WHERE 
			member_id=#{memberId};
	</update>
	<!-- 수정할 회원 데이터 가져오기-->
	<select id="getMemberInfoById" parameterType="String" resultMap="usersResultMap">
		/* 특정회원 조회 */
		SELECT 
			member_id, 
			roompay_mileage_rate_code,
			mem_level_code, 
			member_pw, 
			member_email, 
			member_name, 
			member_birth, 
			member_gender, 
			member_phone, 
			member_addr, 
			member_regdate, 
			member_addr_detail, 
			final_mileage, 
			accumulated_payment_amount, 
			memberState
		FROM 
			member
		WHERE
			member_id = #{memberId};
	</select>

	
<!-- 	     <select id="checkId" resultType="java.lang.Boolean">
		/* 회원아이디 중복체크 */
		SELECT
			COUNT(m.member_id)
		FROM
			member AS m
		WHERE
			m.member_id = #{memberId};
	</select>
	
	 -->
	
	
	<select id="memberLevelList" resultMap="usersResultMap">
	/* 회원등급 목록 조회 */
    SELECT mem_level_code, membership_rating, System_registration_time
	FROM mem_level
	</select>
	
	
		<!-- 주석 -->
	<!-- select 태그선택? select sql구문 -->
	<!-- id : Mapper.java 에서 선언한 추상메소드명 -->
	<!-- resultType : Mapper.java 에서 선언한 추상메소드의 반환타입 DTO명 -->
	<!-- 태그의 인라인에는 sql쿼리 문장 작성한다. -->
		<select id="getSearchForUserList" resultMap="usersResultMap">
		 /* 특정회원 조회 */
		SELECT
			m.member_id,
			m.member_pw,
			m.member_name,
			member_email,
			member_birth,
			member_gender,
			member_phone,
			member_addr,
			member_addr_detail,
			rm.mileage_grade_name,
			final_mileage,
			member_regdate
		
	FROM member AS m
	inner join
	roompay_mileage_rate AS rm
	on
	m.roompay_mileage_rate_code = rm.roompay_mileage_rate_code
	<where>
			<if test="searchKey != null and searchKey != ''">
				<choose>
					<otherwise>					
						${searchKey} LIKE CONCAT('%', #{searchValue}, '%')
					</otherwise>
				</choose>
			</if>
		</where>
	</select>

	<insert id="addMember" parameterType="AdminUser">
	    <!-- 회원가입 -->
	    INSERT INTO member
	    (member_id, mem_level_code, roompay_mileage_rate_code, member_pw, member_email, member_name, member_birth,
	    member_gender, member_phone, member_addr, member_addr_detail, member_regdate, final_mileage,
	    accumulated_payment_amount, memberState)
	    VALUES
	    (#{memberId}, #{mem_level_code}, IFNULL(#{roompay_mileage_rate_code},'roompay_mileage03'), #{memberPw}, #{memberEmail}, #{memberName}, #{memberBirth},
	     #{memberGender}, #{memberPhone}, #{memberAddr}, #{member_addr_detail}, CURDATE(), 0,
	     0, '정상회원');
	</insert>

	
	<select id="getuserList" resultMap="usersResultMap">
	/* 회원목록 조회 */
		SELECT
			m.member_id,
			m.member_pw,
			m.member_name,
			member_email,
			member_birth,
			member_gender,
			member_phone,
			member_addr,
			member_addr_detail,
			rm.mileage_grade_name,
			final_mileage,
			member_regdate
		
	FROM member AS m
	inner join
	roompay_mileage_rate AS rm
	on
	m.roompay_mileage_rate_code = rm.roompay_mileage_rate_code
	
		<!--SELECT
			m.member_id,
			m.member_pw,
			m.member_name
		FROM
			member AS m-->
	</select>
	<select id="findByUsernameAndPassword" resultMap="usersResultMap">
	    SELECT *
	    FROM member
	    WHERE member_id = #{memberId}
	    AND member_pw = #{memberPw}
	</select>
	<select id="checkId" parameterType="String" resultType="boolean">
		/* 회원아이디 중복체크 */
		SELECT
			COUNT(m.member_id)
		FROM
			member AS m
		WHERE
			m.member_id = #{memberId};
	</select>
</mapper>
	